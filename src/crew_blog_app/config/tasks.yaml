# research_consultant:
#   description: >
#     Conduct research on teaching a free and high quality resources to learn the specified topic from scratch to an advanced level based on current trend.
#     The researh should inclued each topics to learn and free courses, books, articles,youtube videos, and any other relevant materials. prepare a structured learning path with estimated time to complete each resource. 
#     <Domain Name>{domain_name}</Product Name>
#     <Topic>{topic}</Topic>
#     <Learning Level>{learning_level}</Learning Level>
#     <Preferred Language>{preferred_language}</Preferred Language>
#     <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>
    
#     Current date: {current_date}
#     IMPORTANT: Must Store the research consultant report in 'resources/draft/research_consultant_{research_filename}.md' using the FileWriterTool before completing this task.
  
#   expected_output: >
#     Provide a comprehensive list of free resources to learn the specified topic from scratch to an advanced level.
#     The list should include the following details for each resource:
#     - Resource Type (crash Course, current trend blogs, Article, Video, etc.)
#     - Title
#     - Author/Instructor
#     - URL/Link
#     - Description
#     - Learning Level (Beginner, Intermediate, Advanced)
#     - programming Language
#     - Estimated Time to Complete (if applicable)
#     Confirm the file has been created successfully before task completion.
    

# path_planner:
#   description: >
#     Develop a detailed learning path that includes structured day to day tasks to master the specified topic from scratch to an advanced level. It should include each topics to learn and free courses, books, articles,youtube videos, and any other relevant materials.
    
#     FIRST: Read the research consultant report from 'resources/draft/research_consultant_{research_filename}' using FileReadTool.
#     THEN: Create your structured learning path based on that research.
#     FINALLY: Save your path to 'resources/draft/path_planner_{research_filename}' using FileWriterTool.

#     <Topic>{topic}</Topic>
#     <Learning Level>{learning_level}</Learning Level>
#     <Preferred Language>{preferred_language}</Preferred Language>
#     <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>
    
#     Current date: {current_date}

#   expected_output: >
#     Provide a structured learning path with day to day tasks to master the specified topic from scratch to an advanced level.
#     The learning path should include the following details for each task:
#     - Day/Week Number
#     - Topic/Subtopic
#     - Resource Type (crash Course, current trend blogs, Article, Video, etc.)
#     - Title
#     - Author/Instructor
#     - URL/Link
#     - Description
#     - Learning Level (Beginner, Intermediate, Advanced)
#     - programming Language
#     - Estimated Time to Complete (if applicable)

# content_reviewer:
#   description: >
#     Create a appropriate video link and github repo for each day/ week task in the learning path to master the specified topic from scratch to an advanced level. 
    
#     FIRST: Read the path planner from 'resources/draft/path_planner_{research_filename}' using FileReadTool.
#     THEN: Find relevant videos and GitHub repositories for each learning task.
#     FINALLY: Save your findings to 'resources/draft/content_reviewer_{research_filename}' using FileWriterTool.
    

#     <Topic>{topic}</Topic>
#     <Learning Level>{learning_level}</Learning Level>
#     <Preferred Language>{preferred_language}</Preferred Language>
#     <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>

#     Current date: {current_date}
   
#   expected_output: >
#     Provide a list of video links and github repo for each day/ week task in the learning path to master the specified topic from scratch to an advanced level.
#     The list should include the following details for each task:
#     - Day/Week Number
#     - Topic/Subtopic
#     - Video Link
#     - GitHub Repo Link
#     - Description
#     - Learning Level (Beginner, Intermediate, Advanced)
#     - programming Language
#     - Estimated Time to Complete (if applicable)

#     Confirm the file has been created successfully.

# create_content_calendar:
#   description: >
#     Develop a content calendar to schedule and organize the learning journey for mastering the specified topic from scratch to an advanced level. 
#     <Topic>{topic}</Topic>
#     <Learning Level>{learning_level}</Learning Level>
#     <Preferred Language>{preferred_language}</Preferred Language>
#     <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>

#     Current date: {current_date}
    
#     FIRST: Read the path planner from 'resources/draft/path_planner_{research_filename}' using FileReadTool for insights and building the strategy.

#   expected_output: >
#     Provide a structured content calendar to schedule and organize the learning journey for mastering the specified topic from scratch to an advanced level.
#     The content calendar should include the following details for each scheduled task:  
#     - Day /week
#     - Topic/Subtopic
#     - Resource Type (crash Course, current trend blogs, Article, Video, etc.)
#     - Title
#     - task to do
#     - task level (Beginner, Intermediate, Advanced)
#     - reference github repo link
#     - reference video link
#     - Estimated Time to Complete (if applicable)
#     FINALLY: Store the content calendar in 'resources/draft/content_calendar_{research_filename}.md'.
      

research_consultant:
  description: >
    Conduct research on teaching a free and high quality resources to learn the specified topic from scratch to an advanced level based on current trend.
    The research should include each topics to learn and free courses, books, articles, youtube videos, and any other relevant materials. prepare a structured learning path with estimated time to complete each resource. 
    <Domain Name>{domain_name}</Domain Name>
    <Topic>{topic}</Topic>
    <Learning Level>{learning_level}</Learning Level>
    <Preferred Language>{preferred_language}</Preferred Language>
    <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>
    
    Current date: {current_date}
    
    IMPORTANT: You MUST save your research findings to the file '{resources_path}/research_consultant_{research_filename}.md' using the FileWriterTool before completing this task.

  expected_output: >
    A comprehensive research report saved as a markdown file at '{resources_path}/research_consultant_{research_filename}.md'.
    The file must contain:
    - Resource Type (Course, Article, Video, etc.)
    - Title
    - Author/Instructor
    - URL/Link
    - Description
    - Learning Level (Beginner, Intermediate, Advanced)
    - Programming Language
    - Estimated Time to Complete
    
    Confirm the file has been created successfully before task completion.

path_planner:
  description: >
    Develop a detailed learning path with structured day-to-day tasks to master the specified topic from scratch to an advanced level.
    
    FIRST: Read the research consultant report from '{resources_path}/research_consultant_{research_filename}.md' using FileReadTool.
    THEN: Create your structured learning path based on that research.
    FINALLY: Save your path to '{resources_path}/path_planner_{research_filename}.md' using FileWriterTool.
    
    <Topic>{topic}</Topic>
    <Learning Level>{learning_level}</Learning Level>
    <Preferred Language>{preferred_language}</Preferred Language>
    <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>
    
    Current date: {current_date}

  expected_output: >
    A structured learning path saved as '{resources_path}/path_planner_{research_filename}.md' containing:
    - Day/Week Number
    - Topic/Subtopic
    - Resource details from research
    - Learning progression
    
    Confirm the file has been created successfully.

content_reviewer:
  description: >
    Create appropriate video links and GitHub repos for each day/week task in the learning path.
    
    FIRST: Read the path planner from '{resources_path}/path_planner_{research_filename}.md' using FileReadTool.
    THEN: Find relevant videos and GitHub repositories for each learning task.
    FINALLY: Save your findings to '{resources_path}/content_reviewer_{research_filename}.md' using FileWriterTool.
    
    <Topic>{topic}</Topic>
    Current date: {current_date}

  expected_output: >
    A content review file saved as '{resources_path}/content_reviewer_{research_filename}.md' with video links and GitHub repos for each learning task.
    
    Confirm the file has been created successfully.


create_content_calendar:
  description: >
    Develop a content calendar to schedule and organize the learning journey for mastering the specified topic from scratch to an advanced level. 
    <Topic>{topic}</Topic>
    <Learning Level>{learning_level}</Learning Level>
    <Preferred Language>{preferred_language}</Preferred Language>
    <Estimated Time to Complete>{estimated_time}</Estimated Time to Complete>

    Current date: {current_date}
    
    FIRST: Read all previous files:
    - '{resources_path}/research_consultant_{research_filename}.md'
    - '{resources_path}/path_planner_{research_filename}.md'
    - '{resources_path}/content_reviewer_{research_filename}.md'

    THEN: Create a unified content calendar.

    FINALLY: Save to '{resources_path}/content_calendar_{research_filename}.md' using FileWriterTool.
  expected_output: >
    Provide a structured content calendar to schedule and organize the learning journey for mastering the specified topic from scratch to an advanced level.
    The content calendar should include the following details for each scheduled task:  
    - Day /week
    - Topic/Subtopic
    - Resource Type (crash Course, current trend blogs, Article, Video, etc.)
    - Title
    - task to do
    - task level (Beginner, Intermediate, Advanced)
    - reference github repo link
    - reference video link
    - Estimated Time to Complete (if applicable)
    Confirm the file has been created successfully.
  